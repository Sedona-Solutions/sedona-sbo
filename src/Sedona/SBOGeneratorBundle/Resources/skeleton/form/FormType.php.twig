<?php

namespace {{ namespace }}\Form{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\Admin;

{% block use_statements %}
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
{% endblock use_statements %}

{% block class_definition %}
class {{ form_class }} extends AbstractType
{% endblock class_definition %}
{
{% block class_body %}
    {% if fields|length > 0 %}
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        /*  */
        $builder
{% for field, metadata in fields %}
{% if metadata.type == 'date' %}
            ->add("{{ field }}", "{{ metadata.type }}", array('widget' => 'single_text', 'format' => "dd/MM/yyyy"{% if metadata.nullable is defined %}, 'required' => {{ metadata.nullable ? 'false' : 'true' }}{% endif %}))
{% elseif metadata.type == 'datetime' %}
            ->add("{{ field }}", "{{ metadata.type }}", array('widget' => 'single_text', 'format' => "dd/MM/yyyy HH:mm:ss"{% if metadata.nullable is defined %}, 'required' => {{ metadata.nullable ? 'false' : 'true' }}{% endif %}))
{% elseif metadata.type == 'time' %}
            ->add("{{ field }}", "{{ metadata.type }}", array('widget' => 'single_text', 'with_seconds' => true{% if metadata.nullable is defined %}, 'required' => {{ metadata.nullable ? 'false' : 'true' }}{% endif %}))
{% elseif metadata.type in [constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_ONE')] %}
{% set property = null  -%}
{% if method_exists(metadata['targetEntity'] ,'get'~'name'|capitalize ) -%}
{% set property = 'name'  %}
{% elseif method_exists(metadata['targetEntity'] ,'get'~'title'|capitalize ) -%}
{% set property = 'title'  %}
{% endif %}
            ->add("{{ field }}", "entity_select2", [
                   'class'             => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ field|capitalize }}',
                   'searchRouteName'   => 'admin_{{ entity_class|lower }}_{{ field|lower }}_search',
                   'property'          => '{{ property }}',
                   'placeholder'       => 'search_placeholder',
                   'required'          => false
               ])
{% elseif metadata.type in [constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::ONE_TO_MANY'),constant('Doctrine\\ORM\\Mapping\\ClassMetadataInfo::MANY_TO_MANY')] %}
{% set property = null  -%}
{% if method_exists(metadata['targetEntity'] ,'get'~'name'|capitalize ) -%}
{% set property = 'name'  %}
{% elseif method_exists(metadata['targetEntity'] ,'get'~'title'|capitalize ) -%}
{% set property = 'title'  %}
{% endif %}
        //   ->add("{{ field }}","collection_select2",[
        //           'class'             => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ field|capitalize }}',
        //           'searchRouteName'   => 'admin_{{ field|lower }}_search',
        //           'property'          => '{{ property }}',
        //           'required'          => false
        //       ])
{% elseif metadata.type == 'text' %}
            ->add('{{ field }}', 'ckeditor'{% if metadata.nullable is defined %}, ['required' => {{ metadata.nullable ? 'false' : 'true' }}]{% endif %})
{% else %}
            ->add('{{ field }}'{% if metadata.nullable is defined %}, null, ['required' => {{ metadata.nullable ? 'false' : 'true' }}]{% endif %})
{% endif %}
{% endfor %}
        ;
    }
    {% endif %}

    /**
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}'
        ));
    }

    /**
     * @return string
     */
    public function getName()
    {
        return '{{ form_type_name }}';
    }
{% endblock class_body %}
}
